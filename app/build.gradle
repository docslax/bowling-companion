apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def versionMajor = 3
def versionMinor = 1
def versionPatch = 2

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "ca.josephroque.bowlingcompanion"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionMajor * 100 + versionMinor * 10 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"

            def apiKeys = [
                    ["TRANSFER_SERVER_URL", "http://10.0.2.2:8080"],
                    ["BANNER_AD_UNIT_ID", "ca-app-pub-3940256099942544/6300978111"],
                    ["ADMOB_APP_ID", "ca-app-pub-3940256099942544~3347511713"],
                    ["TRANSFER_API_KEY", "API_KEY_GOES_HERE"],
                    ["MIXPANEL_TOKEN", "API_KEY_GOES_HERE"]
            ]

            apiKeys.each { key, value ->
                buildConfigField "String", key, "\"${value}\""
                resValue "string", key, value
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            def apiKeys = [
                    ["TRANSFER_SERVER_URL", "API_KEY_GOES_HERE"],
                    ["BANNER_AD_UNIT_ID", "API_KEY_GOES_HERE"],
                    ["ADMOB_APP_ID", "ca-app-pub-3940256099942544~3347511713"],
                    ["TRANSFER_API_KEY", "API_KEY_GOES_HERE"],
                    ["MIXPANEL_TOKEN", "API_KEY_GOES_HERE"]
            ]

            apiKeys.each { key, value ->
                buildConfigField "String", key, "\"${value}\""
                resValue "string", key, value
            }
        }
    }

    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.2'

    // Androidx + Material dependencies
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.preference:preference:1.1.0-alpha02'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha01'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0-alpha01'

    // Third party libraries
    implementation 'com.ncapdevi:frag-nav:3.1.0' // https://github.com/ncapdevi/FragNav
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha' // https://github.com/PhilJay/MPAndroidChart
    implementation 'com.mixpanel.android:mixpanel-android:5.4.4' // https://github.com/mixpanel/mixpanel-android

    // Admob support
    implementation 'com.google.android.gms:play-services-gcm:16.0.0'
    implementation 'com.google.android.gms:play-services-ads:17.1.2'

    // Test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'org.mockito:mockito-core:2.23.4'

    // Instrumentation test dependencies
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.24.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
